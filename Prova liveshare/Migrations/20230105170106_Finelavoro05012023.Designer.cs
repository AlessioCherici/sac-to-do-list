// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prova_liveshare;

#nullable disable

namespace Provaliveshare.Migrations
{
    [DbContext(typeof(TodoListDbContext))]
    [Migration("20230105170106_Finelavoro05012023")]
    partial class Finelavoro05012023
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Prova_liveshare.Attivita", b =>
                {
                    b.Property<int>("IdAttivita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAttivita"));

                    b.Property<DateTime>("DataAttivita")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdUtente")
                        .HasColumnType("int");

                    b.Property<int?>("ListaAttivitaIdLista")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stato")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UtenteIdUtente")
                        .HasColumnType("int");

                    b.HasKey("IdAttivita");

                    b.HasIndex("ListaAttivitaIdLista");

                    b.HasIndex("UtenteIdUtente");

                    b.ToTable("Attivita");
                });

            modelBuilder.Entity("Prova_liveshare.ListaAttivita", b =>
                {
                    b.Property<int>("IdLista")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLista"));

                    b.Property<int>("AttivitaIdAttivita")
                        .HasColumnType("int");

                    b.Property<int>("IdAttivita")
                        .HasColumnType("int");

                    b.Property<string>("NomeLista")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdLista");

                    b.HasIndex("AttivitaIdAttivita");

                    b.ToTable("ListaAttivita");
                });

            modelBuilder.Entity("Prova_liveshare.Utente", b =>
                {
                    b.Property<int>("IdUtente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUtente"));

                    b.Property<string>("CognomeUtente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cognome");

                    b.Property<string>("EmailUtente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("NomeUtente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.Property<string>("NumeroTelefonoUtente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("numero_telefono");

                    b.HasKey("IdUtente");

                    b.ToTable("Utenti");
                });

            modelBuilder.Entity("Prova_liveshare.Attivita", b =>
                {
                    b.HasOne("Prova_liveshare.ListaAttivita", null)
                        .WithMany("Task")
                        .HasForeignKey("ListaAttivitaIdLista");

                    b.HasOne("Prova_liveshare.Utente", "Utente")
                        .WithMany("Attivita")
                        .HasForeignKey("UtenteIdUtente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utente");
                });

            modelBuilder.Entity("Prova_liveshare.ListaAttivita", b =>
                {
                    b.HasOne("Prova_liveshare.Attivita", "Attivita")
                        .WithMany()
                        .HasForeignKey("AttivitaIdAttivita")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attivita");
                });

            modelBuilder.Entity("Prova_liveshare.ListaAttivita", b =>
                {
                    b.Navigation("Task");
                });

            modelBuilder.Entity("Prova_liveshare.Utente", b =>
                {
                    b.Navigation("Attivita");
                });
#pragma warning restore 612, 618
        }
    }
}
